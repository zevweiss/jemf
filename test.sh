#!/bin/bash

set -u

fsfile="$(mktemp)"
trap "rm -f $fsfile" EXIT

jemf() { ./jemf "$@"; }

export JEMF_FSFILE="$fsfile"
export __JEMF_TEST__=1
export __JEMF_TEST_PASSWORD__="hunter2"

nfail=0
npass=0
ntests=0

runtest()
{
	local status label result n invert=false

	OPTIND=1
	while getopts n opt; do
		case "$opt" in
		n) invert=true;;
		*) return 1;;
		esac
	done
	shift "$((OPTIND-1))"

	label="$1"
	shift 1

	printf '%-40s ' "$label:"

	((++ntests))

	if $invert; then
		! TEST_OUTPUT="$("$@" 2>&1)"
	else
		TEST_OUTPUT="$("$@")"
	fi
	status="$?"

	if [ "$status" = 0 ]; then
		result="pass"
		((++npass))
	else
		result="fail"
		((++nfail))
	fi
	printf '%s\n' "$result"
}

runtest "mkfs" jemf mkfs -f
runtest "ls fresh FS" jemf ls
runtest "empty FS ls output empty" [ -z "$TEST_OUTPUT" ]

runtest "mkdir" jemf mkdir d
runtest "ls with single top-level entry" jemf ls
runtest "single-item ls output" [ "$TEST_OUTPUT" = "d/" ]

runtest -n "mkdir when directory exists" jemf mkdir d

runtest "create file" jemf create -g L10 d/f1
runtest "cat file" jemf cat d/f1

df1="$TEST_OUTPUT"
runtest "autogenerated file length" [ "${#df1}" = 10 ]

runtest -n "mkdir when file exists" jemf mkdir d/f1

runtest "cd & mv via shell" jemf shell <<-EOF
	cd d
	mv f1 f2
EOF

runtest "cat renamed file" jemf cat d/f2
df2="$TEST_OUTPUT"
runtest "file content after rename" [ "$df2" = "$df1" ]

runtest "rename directory" jemf mv d e

runtest "cat file after directory rename" jemf cat e/f2
ef2="$TEST_OUTPUT"
runtest "file content after directory rename" [ "$ef2" = "$df2" ]

runtest "edit existing file" jemf edit -g L10 e/f2
ef2_old="$ef2"
runtest "cat edited file" jemf cat e/f2
ef2="$TEST_OUTPUT"
runtest "content of edited file" [ "$ef2" != "$ef2_old" ]

runtest "rm file" jemf rm e/f2
runtest "rm directory" jemf rm e
runtest "ls on emptied FS" jemf ls
runtest "ls output empty after emptying FS" [ -z "$TEST_OUTPUT" ]

runtest "cross-directory rename" jemf shell <<-EOF
	mkdir d1
	mkdir d2
	create -g L12 d1/f
	mv d1/f d2
EOF

runtest -n "cat old after cross-directory rename" jemf cat d1/f
runtest "cat new after cross-directory rename" jemf cat d2/f

runtest -n "rm non-empty directory" jemf rm d2
runtest "rm -r on non-empty directory" jemf rm -r d2

echo
echo "Ran $ntests tests; $npass passed, $nfail failed."
[ "$nfail" = 0 ]
